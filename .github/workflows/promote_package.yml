name: Promote Python Package

on:
  repository_dispatch:
    types: [cloudsmith-package-synced]  # Triggered when Cloudsmith sends a webhook

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'example_package'

permissions:
  id-token: write

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Payload
        run: echo "Payload received: ${{ toJson(github.event.client_payload) }}"
        shell: bash

  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Extract package version from webhook
        run: |
          echo "Package version from webhook: ${{ github.event.client_payload.package_version }}"
          echo "PACKAGE_VERSION=${{ github.event.client_payload.package_version }}" >> $GITHUB_ENV
        shell: bash

      - name: Tag package as "ready-for-production"
        run: |
          cloudsmith tag add \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$PACKAGE_NAME-${PACKAGE_VERSION} \
            ready-for-production
        shell: bash

      - name: Get package identifier for promotion
        run: |
          # Query all packages tagged as "ready-for-production"
          PACKAGE_QUERY="tag:ready-for-production"
          echo "Searching for package with query: $PACKAGE_QUERY"

          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "$PACKAGE_QUERY" -F json)

          # Extract the identifier_perm using jq (ensure correct handling)
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm // empty')
          
          if [ -z "$IDENTIFIER" ]; then
            echo "Failed to find package identifier"
            exit 1
          fi
          
          echo "Found package identifier: $IDENTIFIER"
          echo "PACKAGE_IDENTIFIER=$IDENTIFIER" >> $GITHUB_ENV
        shell: bash

      - name: Promote package to production
        run: |
          cloudsmith mv --yes \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$PACKAGE_IDENTIFIER \
            ${{ env.CLOUDSMITH_PRODUCTION_REPO }}
        shell: bash
