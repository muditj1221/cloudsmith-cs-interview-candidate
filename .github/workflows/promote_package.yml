name: Promote Python Package

on:
  repository_dispatch:
    types: [cloudsmith-package-synced]  # Triggered by Cloudsmith webhook

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'production'  # PROD repo
  CLOUDSMITH_PRODUCTION_REPO: 'staging'  # STAG repo
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'testing_package'

permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Tag Package as Ready for Production
        run: |
          PACKAGE_VERSION="${{ github.event.client_payload.package_version }}"
          PACKAGE_QUERY="filename:${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz"

          echo "Searching for package with query: $PACKAGE_QUERY"

          # Fetch package data from staging repo
          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_PRODUCTION_REPO }} -q "$PACKAGE_QUERY" -F json)

          # Extract package identifier
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "Failed to find package identifier"
            exit 1
          fi

          echo "Found package identifier: $IDENTIFIER"

          # Tag package as "ready-for-production"
          cloudsmith tags add \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_PRODUCTION_REPO }}/$IDENTIFIER \
            ready-for-production

          echo "Tagged package as 'ready-for-production'"
        shell: bash

      - name: Promote Ready-for-Production Packages
        run: |
          echo "Fetching all packages tagged 'ready-for-production' in staging repository..."

          # Query all packages tagged as "ready-for-production"
          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_PRODUCTION_REPO }} -q "tag:ready-for-production" -F json)

          # Extract identifiers for all packages with the tag
          IDENTIFIERS=$(echo "$PACKAGE_DATA" | jq -r '.data[].identifier_perm')

          if [ -z "$IDENTIFIERS" ] || [ "$IDENTIFIERS" = "null" ]; then
            echo "No packages found with the 'ready-for-production' tag."
            exit 1
          fi

          echo "Found the following package identifiers: $IDENTIFIERS"

          # Loop through each package and promote it
          for IDENTIFIER in $IDENTIFIERS; do
            echo "Promoting package: $IDENTIFIER"

            cloudsmith mv --yes \
              ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_PRODUCTION_REPO }}/$IDENTIFIER \
              ${{ env.CLOUDSMITH_STAGING_REPO }}

            echo "Successfully promoted package: $IDENTIFIER"
          done
          
        shell: bash
